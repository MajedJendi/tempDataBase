{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\n// material-ui components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Icon from \"@material-ui/core/Icon\"; // core components\n\nimport Card from \"./Card.js\";\nimport CardBody from \"./CardBody.js\";\nimport CardHeader from \"./CardHeader.js\";\nimport styles from \"../styles/material-kit-react/components/customTabsStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function CustomTabs(props) {\n  var _classNames;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var handleChange = function handleChange(event, value) {\n    setValue(value);\n  };\n\n  var classes = useStyles();\n  var headerColor = props.headerColor,\n      plainTabs = props.plainTabs,\n      tabs = props.tabs,\n      title = props.title,\n      rtlActive = props.rtlActive;\n  var cardTitle = classNames((_classNames = {}, _defineProperty(_classNames, classes.cardTitle, true), _defineProperty(_classNames, classes.cardTitleRTL, rtlActive), _classNames));\n  return React.createElement(Card, {\n    plain: plainTabs\n  }, React.createElement(CardHeader, {\n    color: headerColor,\n    plain: plainTabs\n  }, title !== undefined ? React.createElement(\"div\", {\n    className: cardTitle\n  }, title) : null, React.createElement(Tabs, {\n    value: value,\n    onChange: handleChange,\n    classes: {\n      root: classes.tabsRoot,\n      indicator: classes.displayNone\n    }\n  }, tabs.map(function (prop, key) {\n    var icon = {};\n\n    if (prop.tabIcon) {\n      icon = {\n        icon: typeof prop.tabIcon === \"string\" ? React.createElement(Icon, null, prop.tabIcon) : React.createElement(prop.tabIcon, null)\n      };\n    }\n\n    return React.createElement(Tab, _extends({\n      classes: {\n        root: classes.tabRootButton,\n        label: classes.tabLabel,\n        selected: classes.tabSelected,\n        wrapper: classes.tabWrapper\n      },\n      key: key,\n      label: prop.tabName\n    }, icon));\n  }))), React.createElement(CardBody, null, tabs.map(function (prop, key) {\n    if (key === value) {\n      return React.createElement(\"div\", {\n        key: key\n      }, prop.tabContent);\n    }\n\n    return null;\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}