{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nimport Autosuggest from \"react-autosuggest\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport Error from \"./Error\";\n\nvar https = require('https');\n\nvar ValidationSchema = Yup.object().shape({//   password: Yup.string()\n  //     .min(1, \"Too Short!\")\n  //     .max(255, \"Too Long!\")\n  //     .required(\"Required\"),\n  //   email: Yup.string()\n  //     .email(\"Must be an email address\")\n  //     .max(255, \"Too Long!\")\n  //     .required(\"Required\"),\n  //     name: Yup.string()\n  //     .min(1, \"Too Short!\")\n  //     .max(255, \"Too Long!\")\n  //     .required(\"Required\"),\n  //     phone: Yup.string()\n  //     .min(1, \"Too Short!\")\n  //     .max(255, \"Too Long!\")\n  //     .required(\"Required\")\n});\n\nfunction userLogin(_x) {\n  return _userLogin.apply(this, arguments);\n}\n\nfunction _userLogin() {\n  _userLogin = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(req) {\n    var res, status;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('Trying to signup rn');\n            _context.next = 3;\n            return fetch(req);\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.status;\n\n          case 6:\n            status = _context.sent;\n\n            if (res.status === 200) {\n              console.log(\"success\");\n              window.location.href = \"about\";\n            } else if (res.status === 409) {\n              console.log(\"Existing email\");\n              document.getElementById(\"input-row-email\").innerHTML = \"You are already registered, would you like to sign in\";\n            } else if (res.status === 408) {\n              console.log(\"Existing phone number\");\n              document.getElementById(\"input-row-phone\").innerHTML = \"This phone number was already used\";\n            } else {\n              console.log(\"Other errors\");\n            }\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _userLogin.apply(this, arguments);\n}\n\nexport default function Signup() {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      country = _React$useState2[0],\n      setCountry = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      suggestions = _React$useState4[0],\n      setSuggestions = _React$useState4[1];\n\n  return React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      retypePass: \"\"\n    },\n    validationSchema: ValidationSchema,\n    validate: function validate(values) {\n      var errors = {};\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting,\n          resetForm = _ref.resetForm;\n\n      if (values.retypePass != values.password) {\n        document.getElementById(\"passAndRepassDontMatch\").innerHTML = \"Password confirmation does not match the password\";\n      } else {\n        setSubmitting(true);\n        console.log(_JSON$stringify(values, null, 2));\n        var headers = new Headers();\n        headers.append('Content-type', 'application/json');\n        var options = {\n          method: 'POST',\n          headers: headers,\n          body: '{ \"email\": \"' + values.email + '\", \"password\": \"' + values.password + '\"}'\n        };\n        var req = new Request('http://localhost:3000/users/signup', options);\n        setTimeout(function () {\n          userLogin(req);\n          resetForm();\n          setCountry(\"\");\n          setSubmitting(false);\n        }, 500);\n      }\n    }\n  }, function (_ref2) {\n    var values = _ref2.values,\n        errors = _ref2.errors,\n        touched = _ref2.touched,\n        handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        isSubmitting = _ref2.isSubmitting,\n        setFieldValue = _ref2.setFieldValue;\n    return React.createElement(\"div\", {\n      className: \"columns is-mobile\"\n    }, React.createElement(\"div\", {\n      className: \"column is-half is-offset-one-quarter is-4\"\n    }, React.createElement(\"div\", {\n      className: \"box is-larg\"\n    }, React.createElement(\"form\", {\n      onSubmit: handleSubmit\n    }, React.createElement(\"div\", {\n      className: \"field\"\n    }, React.createElement(\"div\", {\n      className: \"control has-icons-left has-icons-right\"\n    }, React.createElement(\"input\", {\n      className: \"input is-info\",\n      name: \"email\",\n      type: \"text\",\n      placeholder: \"Email\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.email\n    }), React.createElement(\"span\", {\n      className: \"icon is-small is-left\"\n    }, React.createElement(\"i\", {\n      className: \"fas fa-envelope\"\n    })), React.createElement(\"p\", {\n      className: \"help is-danger\",\n      id: \"input-row-email\"\n    }))), React.createElement(\"div\", {\n      className: \"field\"\n    }, React.createElement(\"div\", {\n      className: \"control has-icons-left has-icons-right\"\n    }, React.createElement(\"input\", {\n      className: \"input is-info\",\n      name: \"password\",\n      type: \"text\",\n      placeholder: \"Password\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.password\n    }), React.createElement(\"span\", {\n      className: \"icon is-small is-left\"\n    }, React.createElement(\"i\", {\n      className: \"fas fa-shield-alt\"\n    })))), React.createElement(\"div\", {\n      className: \"field\"\n    }, React.createElement(\"div\", {\n      className: \"control has-icons-left has-icons-right\"\n    }, React.createElement(\"input\", {\n      className: \"input is-info\",\n      name: \"retypePass\",\n      type: \"text\",\n      placeholder: \"Retype your password\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.retypePass\n    }), React.createElement(\"span\", {\n      className: \"icon is-small is-left\"\n    }, React.createElement(\"i\", {\n      className: \"fas fa-shield-alt\"\n    })), React.createElement(\"p\", {\n      className: \"help is-danger\",\n      id: \"passAndRepassDontMatch\"\n    }))), React.createElement(\"button\", {\n      className: \"button is-primary\",\n      type: \"submit\",\n      disabled: isSubmitting\n    }, \"Signup\")))));\n  });\n} //<label className=\"label\">Password</label>","map":null,"metadata":{},"sourceType":"module"}