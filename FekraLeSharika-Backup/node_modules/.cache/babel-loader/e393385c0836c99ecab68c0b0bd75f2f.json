{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\majed\\\\eclipse-workspace\\\\HopSpot\\\\testingRESTfulAPI\\\\components\\\\parkingAttributes.js\";\nimport React from \"react\";\nimport \"./formik-demo.css\";\nimport Autosuggest from \"react-autosuggest\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport Error from \"./Error\"; //const ValidationSchema = Yup.object().shape({\n//  password: Yup.string()\n//    .min(1, \"Too Short!\")\n//    .max(255, \"Too Long!\")\n//    .required(\"Required\"),\n//  email: Yup.string()\n//    .email(\"Must be an email address\")\n//    .max(255, \"Too Long!\")\n//    .required(\"Required\"),\n//    name: Yup.string()\n//    .min(1, \"Too Short!\")\n//    .max(255, \"Too Long!\")\n//    .required(\"Required\"),\n//    phone: Yup.string()\n//    .min(1, \"Too Short!\")\n//    .max(255, \"Too Long!\")\n//    .required(\"Required\")\n//});\n\nfunction userLogin(_x) {\n  return _userLogin.apply(this, arguments);\n}\n\nfunction _userLogin() {\n  _userLogin = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(req) {\n    var res, status;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('Trying to login rn');\n            _context.next = 3;\n            return fetch(req);\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.status;\n\n          case 6:\n            status = _context.sent;\n\n            if (res.status === 200) {\n              console.log(\"success\"); //window.location.href = \"book\";\n            } else if (res.status === 409) {\n              console.log(\"Existing email\");\n              document.getElementById(\"input-row-email\").innerHTML = \"You are already registered, would you like to sign in\"; //window.location.href=\"map?varid=\" + encodeURIComponent(res.json);\n              //\treturn (<h2>wrong email or password</h2>);\n            } else if (res.status === 408) {\n              console.log(\"Existing phone number\");\n              document.getElementById(\"input-row-phone\").innerHTML = \"This phone number was already used\";\n            } else {\n              console.log(\"Other errors\");\n              document.getElementById(\"input-row-password\").innerHTML = \"Other errors\";\n            } //\treturn (<h2>wrong email or password</h2>);\n\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _userLogin.apply(this, arguments);\n}\n\nfunction fetchAll(_x2) {\n  return _fetchAll.apply(this, arguments);\n} // Covered, Lit, Charging, Camera, Gated Guarded,\n// Compact, Midsized, Large, Oversized\n\n\nfunction _fetchAll() {\n  _fetchAll = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(req) {\n    var headers, options, res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            headers = new Headers();\n            options = {\n              method: 'GET',\n              headers: headers,\n              mode: 'cors',\n              cache: 'default'\n            }; // const req = new Request('http://localhost:3000/users', options);\n\n            _context2.next = 4;\n            return fetch(req);\n\n          case 4:\n            res = _context2.sent;\n            _context2.next = 7;\n            return res.status;\n\n          case 7:\n            status = _context2.sent;\n\n            if (status === 200) {\n              console.log('successful login');\n            }\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _fetchAll.apply(this, arguments);\n}\n\nexport default function parkingAttributes() {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      country = _React$useState2[0],\n      setCountry = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      suggestions = _React$useState4[0],\n      setSuggestions = _React$useState4[1];\n\n  return React.createElement(Formik, {\n    initialValues: {\n      radioGroup: \"\",\n      checkboxGroup: [],\n      singleCheckbox: false\n    },\n    validationSchema: Yup.object().shape({\n      radioGroup: Yup.string().required(\"A radio option is required\"),\n      checkboxGroup: Yup.array().required(\"At least one checkbox is required\"),\n      singleCheckbox: Yup.bool().oneOf([true], \"Must agree to something\")\n    }),\n    onSubmit: function onSubmit(values, actions) {\n      setTimeout(function () {\n        console.log(_JSON$stringify(values, null, 2));\n        actions.setSubmitting(false);\n      }, 500);\n    },\n    render: function render(_ref) {\n      var handleSubmit = _ref.handleSubmit,\n          setFieldValue = _ref.setFieldValue,\n          setFieldTouched = _ref.setFieldTouched,\n          values = _ref.values,\n          errors = _ref.errors,\n          touched = _ref.touched,\n          isSubmitting = _ref.isSubmitting;\n      return React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Radio group\"), React.createElement(RadioButtonGroup, {\n        id: \"radioGroup\",\n        label: \"One of these please\",\n        value: values.radioGroup,\n        error: errors.radioGroup,\n        touched: touched.radioGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Field, {\n        component: RadioButton,\n        name: \"radioGroup\",\n        id: \"radioOption1\",\n        label: \"Choose this option\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(Field, {\n        component: RadioButton,\n        name: \"radioGroup\",\n        id: \"radioOption2\",\n        label: \"Or choose this one\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Single radio\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Is that a valid use case?\"), React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Submit\"));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  });\n} //<span className=\"icon is-small is-left\">\n//<i className=\"fas fa-envelope\"></i>\n//</span>\n//<span className=\"icon is-small is-right\">\n//<i className=\"fas fa-exclamation-triangle\"></i>\n//</span>\n//<p className=\"help is-danger\" id = \"input-row-email\"></p>","map":{"version":3,"sources":["C:\\Users\\majed\\eclipse-workspace\\HopSpot\\testingRESTfulAPI\\components\\parkingAttributes.js"],"names":["React","Autosuggest","Formik","Yup","axios","Error","userLogin","req","console","log","fetch","res","status","document","getElementById","innerHTML","fetchAll","headers","Headers","options","method","mode","cache","parkingAttributes","useState","country","setCountry","suggestions","setSuggestions","radioGroup","checkboxGroup","singleCheckbox","object","shape","string","required","array","bool","oneOf","values","actions","setTimeout","setSubmitting","handleSubmit","setFieldValue","setFieldTouched","errors","touched","isSubmitting","RadioButton"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./formik-demo.css\";\r\n\r\nimport Autosuggest from \"react-autosuggest\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport Error from \"./Error\";\r\n\r\n\r\n//const ValidationSchema = Yup.object().shape({\r\n//  password: Yup.string()\r\n//    .min(1, \"Too Short!\")\r\n//    .max(255, \"Too Long!\")\r\n//    .required(\"Required\"),\r\n//  email: Yup.string()\r\n//    .email(\"Must be an email address\")\r\n//    .max(255, \"Too Long!\")\r\n//    .required(\"Required\"),\r\n//    name: Yup.string()\r\n//    .min(1, \"Too Short!\")\r\n//    .max(255, \"Too Long!\")\r\n//    .required(\"Required\"),\r\n//    phone: Yup.string()\r\n//    .min(1, \"Too Short!\")\r\n//    .max(255, \"Too Long!\")\r\n//    .required(\"Required\")\r\n//});\r\n\r\nasync function userLogin(req) {\r\n  \tconsole.log('Trying to login rn');\r\n\t\r\n\tconst res = await fetch(req);\r\n\t\r\n\tconst status = await res.status;\r\n\t\r\n\tif (res.status === 200) {\r\n\t\tconsole.log(\"success\");\r\n\t\t\r\n\t\t//window.location.href = \"book\";\r\n\r\n\t\t\r\n\t} else if (res.status === 409) {\r\n\tconsole.log(\"Existing email\");\r\n\t\r\n\t   \tdocument.getElementById(\"input-row-email\").innerHTML = \"You are already registered, would you like to sign in\";\r\n\t\t//window.location.href=\"map?varid=\" + encodeURIComponent(res.json);\r\n\r\n\t\r\n\t//\treturn (<h2>wrong email or password</h2>);\r\n\t} else if (res.status === 408){\r\n\t\tconsole.log(\"Existing phone number\");\r\n\t\t   \tdocument.getElementById(\"input-row-phone\").innerHTML = \"This phone number was already used\";\r\n\t} else {\r\n\t\tconsole.log(\"Other errors\");\r\n\t\t   \tdocument.getElementById(\"input-row-password\").innerHTML = \"Other errors\";\r\n\t}\r\n\r\n\t//\treturn (<h2>wrong email or password</h2>);\r\n\t\r\n}\r\n\r\nasync function fetchAll(req){\r\n\r\n\r\n\tconst headers = new Headers();\r\n\t\r\n    const options = { \r\n    \tmethod: 'GET',\r\n\t    headers: headers,\r\n\t    mode: 'cors',\r\n\t    cache: 'default'\t\r\n    };\r\n        \r\n   // const req = new Request('http://localhost:3000/users', options);\r\n        \r\n    const res = await fetch(req);\r\n  \tstatus = await res.status;\r\n  \t\r\n  \tif(status === 200) {\r\n  \t\tconsole.log('successful login');\r\n  \t\t\r\n  \t}\r\n  \t\r\n}\r\n\r\n// Covered, Lit, Charging, Camera, Gated Guarded,\r\n// Compact, Midsized, Large, Oversized\r\n\r\n\r\n\r\nexport default function parkingAttributes() {\r\n\r\n  const [country, setCountry] = React.useState(\"\");\r\n  const [suggestions, setSuggestions] = React.useState([]);\r\n  \r\n  return (\r\n\t\t\r\n\t    <Formik\r\n\t      initialValues={{\r\n\t        radioGroup: \"\",\r\n\t        checkboxGroup: [],\r\n\t        singleCheckbox: false\r\n\t      }}\r\n\t      validationSchema={Yup.object().shape({\r\n\t        radioGroup: Yup.string().required(\"A radio option is required\"),\r\n\t        checkboxGroup: Yup.array().required(\r\n\t          \"At least one checkbox is required\"\r\n\t        ),\r\n\t        singleCheckbox: Yup.bool().oneOf([true], \"Must agree to something\")\r\n\t      })}\r\n\t      onSubmit={(values, actions) => {\r\n\t        setTimeout(() => {\r\n\t          console.log(JSON.stringify(values, null, 2));\r\n\t          actions.setSubmitting(false);\r\n\t        }, 500);\r\n\t      }}\r\n\t      render={({\r\n\t        handleSubmit,\r\n\t        setFieldValue,\r\n\t        setFieldTouched,\r\n\t        values,\r\n\t        errors,\r\n\t        touched,\r\n\t        isSubmitting\r\n\t      }) => (\r\n\t        <form onSubmit={handleSubmit}>\r\n\t  \r\n\t          <h2>Radio group</h2>\r\n\t          <RadioButtonGroup\r\n\t            id=\"radioGroup\"\r\n\t            label=\"One of these please\"\r\n\t            value={values.radioGroup}\r\n\t            error={errors.radioGroup}\r\n\t            touched={touched.radioGroup}\r\n\t          >\r\n\t            <Field\r\n\t              component={RadioButton}\r\n\t              name=\"radioGroup\"\r\n\t              id=\"radioOption1\"\r\n\t              label=\"Choose this option\"\r\n\t            />\r\n\t            <Field\r\n\t              component={RadioButton}\r\n\t              name=\"radioGroup\"\r\n\t              id=\"radioOption2\"\r\n\t              label=\"Or choose this one\"\r\n\t            />\r\n\t          </RadioButtonGroup>\r\n\r\n\t          <h2>Single radio</h2>\r\n\t          <p>Is that a valid use case?</p>\r\n\r\n\t          <button type=\"submit\" disabled={isSubmitting}>\r\n\t            Submit\r\n\t          </button>\r\n\t        </form>\r\n\t      )}\r\n\t    />\r\n\t);\r\n}\r\n\r\n//<span className=\"icon is-small is-left\">\r\n//<i className=\"fas fa-envelope\"></i>\r\n//</span>\r\n//<span className=\"icon is-small is-right\">\r\n//<i className=\"fas fa-exclamation-triangle\"></i>\r\n//</span>\r\n//<p className=\"help is-danger\" id = \"input-row-email\"></p>\r\n\r\n"]},"metadata":{},"sourceType":"module"}