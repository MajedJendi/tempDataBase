{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\n// issues:\n// only searches for one charachter and ignores and keeps erasing everytime\n// Input doesnt show\n// maybe try to make the SearchBar component work?\n// Imports\nimport React, { Component } from 'react';\nimport Autocomplete from 'react-google-autocomplete'; // Import Search Bar Components\n//import SearchBar from 'material-ui-search-bar';\n// Import React Scrit Libraray to load Google object\n\nimport Script from 'react-load-script';\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  // Define Constructor\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props)); // Declare State\n\n    _this.state = {\n      city: '',\n      query: ''\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"onSignIn\",\n    value: function onSignIn(googleUser) {\n      console.log(\"just logged in\"); // Useful data for your client-side scripts:\n\n      var profile = googleUser.getBasicProfile();\n      var GoogleAuth = gapi.auth2.getAuthInstance(); // Retrieve the GoogleUser object for the current user.\n\n      var GoogleUser = GoogleAuth.currentUser.get();\n      GoogleUser.grant({\n        'scope': 'https://www.googleapis.com/auth/calendar'\n      });\n      var givenName = profile.getGivenName();\n      var familyName = profile.getFamilyName();\n      var imageUrl = profile.getImageUrl();\n      var email = profile.getEmail(); //Sending to the Sign-in servlet through an AJAX call\n      // The ID token you need to pass to your backend:\n\n      var id_token = googleUser.getAuthResponse().id_token;\n      console.log(\"ID Token: \" + id_token);\n\n      if (googleUser.hasGrantedScopes('https://www.googleapis.com/auth/calendar')) {\n        console.log(\"we have already been granted the Calendar scope!\");\n      } else {\n        googleUser.grant({\n          'scope': 'https://www.googleapis.com/auth/calendar'\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(Script, {\n        url: \"https://accounts.google.com/o/oauth2/auth?client_id=928399431916-o034tjaglvco531va87rpi5jjgn7n6an.apps.googleusercontent.com&onsuccess=onSignIn&scope=https://www.googleapis.com/auth/plus.login&accesstype=offline&redirect_uri=http://localhost:3000/onboarding&response_type=code&onSuccess=onSignIn\",\n        onLoad: this.onSignIn\n      }));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":null,"metadata":{},"sourceType":"module"}