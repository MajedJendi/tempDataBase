{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\majed\\\\eclipse-workspace\\\\HopSpot\\\\testingRESTfulAPI\\\\components\\\\parkingAttributes.js\";\nimport React from \"react\";\nimport Autosuggest from \"react-autosuggest\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport Error from \"./Error\"; //const ValidationSchema = Yup.object().shape({\n//  password: Yup.string()\n//    .min(1, \"Too Short!\")\n//    .max(255, \"Too Long!\")\n//    .required(\"Required\"),\n//  email: Yup.string()\n//    .email(\"Must be an email address\")\n//    .max(255, \"Too Long!\")\n//    .required(\"Required\"),\n//    name: Yup.string()\n//    .min(1, \"Too Short!\")\n//    .max(255, \"Too Long!\")\n//    .required(\"Required\"),\n//    phone: Yup.string()\n//    .min(1, \"Too Short!\")\n//    .max(255, \"Too Long!\")\n//    .required(\"Required\")\n//});\n\nfunction userLogin(_x) {\n  return _userLogin.apply(this, arguments);\n}\n\nfunction _userLogin() {\n  _userLogin = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(req) {\n    var res, status;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('Trying to login rn');\n            _context.next = 3;\n            return fetch(req);\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.status;\n\n          case 6:\n            status = _context.sent;\n\n            if (res.status === 200) {\n              console.log(\"success\"); //window.location.href = \"book\";\n            } else if (res.status === 409) {\n              console.log(\"Existing email\");\n              document.getElementById(\"input-row-email\").innerHTML = \"You are already registered, would you like to sign in\"; //window.location.href=\"map?varid=\" + encodeURIComponent(res.json);\n              //\treturn (<h2>wrong email or password</h2>);\n            } else if (res.status === 408) {\n              console.log(\"Existing phone number\");\n              document.getElementById(\"input-row-phone\").innerHTML = \"This phone number was already used\";\n            } else {\n              console.log(\"Other errors\");\n              document.getElementById(\"input-row-password\").innerHTML = \"Other errors\";\n            } //\treturn (<h2>wrong email or password</h2>);\n\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _userLogin.apply(this, arguments);\n}\n\nfunction fetchAll(_x2) {\n  return _fetchAll.apply(this, arguments);\n} // Covered, Lit, Charging, Camera, Gated Guarded,\n// Compact, Midsized, Large, Oversized\n\n\nfunction _fetchAll() {\n  _fetchAll = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(req) {\n    var headers, options, res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            headers = new Headers();\n            options = {\n              method: 'GET',\n              headers: headers,\n              mode: 'cors',\n              cache: 'default'\n            }; // const req = new Request('http://localhost:3000/users', options);\n\n            _context2.next = 4;\n            return fetch(req);\n\n          case 4:\n            res = _context2.sent;\n            _context2.next = 7;\n            return res.status;\n\n          case 7:\n            status = _context2.sent;\n\n            if (status === 200) {\n              console.log('successful login');\n            }\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _fetchAll.apply(this, arguments);\n}\n\nexport default function parkingAttributes() {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      country = _React$useState2[0],\n      setCountry = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      suggestions = _React$useState4[0],\n      setSuggestions = _React$useState4[1];\n\n  return React.createElement(Formik, {\n    initialValues: {\n      //        compact: false,\n      //        midsize: false,\n      //        large: false,\n      oversize: false\n    } // validationSchema={ValidationSchema}\n    ,\n    validate: function validate(values) {\n      var errors = {};\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting,\n          resetForm = _ref.resetForm;\n      setSubmitting(true);\n      var headers = new Headers();\n      headers.append('Content-type', 'application/json');\n      var options = {\n        method: 'POST',\n        headers: headers,\n        body: _JSON$stringify(values)\n      };\n      var req = new Request('http://localhost:3000/users/signup', options);\n      setTimeout(function () {\n        userLogin(req);\n        resetForm();\n        setCountry(\"\");\n        setSubmitting(false);\n      }, 500);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, function (_ref2) {\n    var values = _ref2.values,\n        errors = _ref2.errors,\n        touched = _ref2.touched,\n        handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        isSubmitting = _ref2.isSubmitting,\n        setFieldValue = _ref2.setFieldValue;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button is-link is-outlined is-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Compact\"), React.createElement(\"button\", {\n      className: \"button is-link is-outlined is-normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Mid-sized\"), React.createElement(\"button\", {\n      className: \"button is-link is-outlined is-medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Large\"), React.createElement(\"button\", {\n      className: \"button is-link is-outlined is-large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Oversized\"), React.createElement(\"input\", {\n      className: \"button is-link is-outlined is-large\",\n      type: \"submit\",\n      name: \"oversized\",\n      value: \"Submit input\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"button is-link is-outlined is-large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button is-link\",\n      name: \"oversized\",\n      type: \"text\",\n      placeholder: \"Large\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }))));\n  });\n} //<span className=\"icon is-small is-left\">\n//<i className=\"fas fa-envelope\"></i>\n//</span>\n//<span className=\"icon is-small is-right\">\n//<i className=\"fas fa-exclamation-triangle\"></i>\n//</span>\n//<p className=\"help is-danger\" id = \"input-row-email\"></p>","map":{"version":3,"sources":["C:\\Users\\majed\\eclipse-workspace\\HopSpot\\testingRESTfulAPI\\components\\parkingAttributes.js"],"names":["React","Autosuggest","Formik","Yup","axios","Error","userLogin","req","console","log","fetch","res","status","document","getElementById","innerHTML","fetchAll","headers","Headers","options","method","mode","cache","parkingAttributes","useState","country","setCountry","suggestions","setSuggestions","oversize","values","errors","setSubmitting","resetForm","append","body","Request","setTimeout","touched","handleChange","handleBlur","handleSubmit","isSubmitting","setFieldValue","email"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport Autosuggest from \"react-autosuggest\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport Error from \"./Error\";\r\n\r\n\r\n//const ValidationSchema = Yup.object().shape({\r\n//  password: Yup.string()\r\n//    .min(1, \"Too Short!\")\r\n//    .max(255, \"Too Long!\")\r\n//    .required(\"Required\"),\r\n//  email: Yup.string()\r\n//    .email(\"Must be an email address\")\r\n//    .max(255, \"Too Long!\")\r\n//    .required(\"Required\"),\r\n//    name: Yup.string()\r\n//    .min(1, \"Too Short!\")\r\n//    .max(255, \"Too Long!\")\r\n//    .required(\"Required\"),\r\n//    phone: Yup.string()\r\n//    .min(1, \"Too Short!\")\r\n//    .max(255, \"Too Long!\")\r\n//    .required(\"Required\")\r\n//});\r\n\r\nasync function userLogin(req) {\r\n  \tconsole.log('Trying to login rn');\r\n\t\r\n\tconst res = await fetch(req);\r\n\t\r\n\tconst status = await res.status;\r\n\t\r\n\tif (res.status === 200) {\r\n\t\tconsole.log(\"success\");\r\n\t\t\r\n\t\t//window.location.href = \"book\";\r\n\r\n\t\t\r\n\t} else if (res.status === 409) {\r\n\tconsole.log(\"Existing email\");\r\n\t\r\n\t   \tdocument.getElementById(\"input-row-email\").innerHTML = \"You are already registered, would you like to sign in\";\r\n\t\t//window.location.href=\"map?varid=\" + encodeURIComponent(res.json);\r\n\r\n\t\r\n\t//\treturn (<h2>wrong email or password</h2>);\r\n\t} else if (res.status === 408){\r\n\t\tconsole.log(\"Existing phone number\");\r\n\t\t   \tdocument.getElementById(\"input-row-phone\").innerHTML = \"This phone number was already used\";\r\n\t} else {\r\n\t\tconsole.log(\"Other errors\");\r\n\t\t   \tdocument.getElementById(\"input-row-password\").innerHTML = \"Other errors\";\r\n\t}\r\n\r\n\t//\treturn (<h2>wrong email or password</h2>);\r\n\t\r\n}\r\n\r\nasync function fetchAll(req){\r\n\r\n\r\n\tconst headers = new Headers();\r\n\t\r\n    const options = { \r\n    \tmethod: 'GET',\r\n\t    headers: headers,\r\n\t    mode: 'cors',\r\n\t    cache: 'default'\t\r\n    };\r\n        \r\n   // const req = new Request('http://localhost:3000/users', options);\r\n        \r\n    const res = await fetch(req);\r\n  \tstatus = await res.status;\r\n  \t\r\n  \tif(status === 200) {\r\n  \t\tconsole.log('successful login');\r\n  \t\t\r\n  \t}\r\n  \t\r\n}\r\n\r\n// Covered, Lit, Charging, Camera, Gated Guarded,\r\n// Compact, Midsized, Large, Oversized\r\n\r\n\r\n\r\nexport default function parkingAttributes() {\r\n\r\n  const [country, setCountry] = React.useState(\"\");\r\n  const [suggestions, setSuggestions] = React.useState([]);\r\n  \r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n//        compact: false,\r\n//        midsize: false,\r\n//        large: false,\r\n        oversize: false,\r\n      }}\r\n     // validationSchema={ValidationSchema}\r\n      validate={values => {\r\n        let errors = {};\r\n\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        setSubmitting(true);\r\n\r\n        const headers = new Headers();\r\n        headers.append('Content-type', 'application/json');\r\n        \r\n        const options = { \r\n        \tmethod: 'POST',\r\n        \theaders,\r\n        \tbody: JSON.stringify(values),\r\n        };\r\n        \r\n        const req = new Request('http://localhost:3000/users/signup', options);\r\n        \r\n        \r\n      setTimeout(() => {\r\n          userLogin(req);\r\n\t      resetForm();\r\n\t      setCountry(\"\");\r\n\t      setSubmitting(false);\r\n\t   }, 500);\r\n        \r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        setFieldValue\r\n      }) => (\r\n    \t<div>\r\n    \t\r\n\t    \t<button className=\"button is-link is-outlined is-small\">Compact</button>\r\n\t    \t\r\n\t    \t<button className=\"button is-link is-outlined is-normal\">Mid-sized</button>\r\n\t    \t\r\n\t    \t<button className=\"button is-link is-outlined is-medium\">Large</button>\r\n\t    \t<button className=\"button is-link is-outlined is-large\">Oversized</button>\r\n\r\n\t    \t<input className=\"button is-link is-outlined is-large\" type=\"submit\" name = \"oversized\"\r\n\t    \t\t\t\t\tvalue=\"Submit input\" disabled={isSubmitting}></input>\r\n\r\n\t   \r\n\t    \t\r\n\t    \t\r\n\t         <div className=\"button is-link is-outlined is-large\">\r\n\t\t          <div className=\"control\">\r\n\t\t\t            <button \r\n\t\t\t            \tclassName =\"button is-link\" \r\n\t\t\t            \tname=\"oversized\"\r\n\t\t\t            \ttype=\"text\" \r\n\t\t\t            \tplaceholder=\"Large\" \r\n\t\t\t\t\t\t    onChange={handleChange}\r\n\t\t\t\t\t        onBlur={handleBlur}\r\n\t\t\t            \tvalue={values.email}\r\n\t\t\t            />\r\n\t\t\t            \r\n\r\n\t\t          </div>\r\n            </div>\r\n          \r\n\t\t </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\n//<span className=\"icon is-small is-left\">\r\n//<i className=\"fas fa-envelope\"></i>\r\n//</span>\r\n//<span className=\"icon is-small is-right\">\r\n//<i className=\"fas fa-exclamation-triangle\"></i>\r\n//</span>\r\n//<p className=\"help is-danger\" id = \"input-row-email\"></p>\r\n\r\n"]},"metadata":{},"sourceType":"module"}