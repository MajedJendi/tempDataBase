{"ast":null,"code":"import React from \"react\";\nimport '../styles/mapQuery.scss';\nimport { storage } from '../firebase';\nconsole.log(\"testing map Query\");\n\nvar _require = require(\"recompose\"),\n    compose = _require.compose,\n    withProps = _require.withProps;\n\nvar _require2 = require(\"react-google-maps\"),\n    withScriptjs = _require2.withScriptjs,\n    withGoogleMap = _require2.withGoogleMap,\n    GoogleMap = _require2.GoogleMap;\n\nvar _require3 = require(\"react-google-maps/lib/components/drawing/DrawingManager\"),\n    DrawingManager = _require3.DrawingManager;\n\nexport default function MapQuery() {\n  return (withProps({\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyC5g7d4aY3U9JJdYFyS6mDUHLCWmQspZt4\\&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      }\n    }),\n    containerElement: React.createElement(\"div\", {\n      style: {\n        height: \"400px\"\n      }\n    }),\n    mapElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      }\n    })\n  }), withScriptjs, withGoogleMap)(function (props) {\n    return React.createElement(GoogleMap, {\n      defaultZoom: 8,\n      defaultCenter: new google.maps.LatLng(-34.397, 150.644)\n    }, React.createElement(DrawingManager, {\n      defaultDrawingMode: google.maps.drawing.OverlayType.CIRCLE,\n      defaultOptions: {\n        drawingControl: true,\n        drawingControlOptions: {\n          position: google.maps.ControlPosition.TOP_CENTER,\n          drawingModes: [google.maps.drawing.OverlayType.CIRCLE, google.maps.drawing.OverlayType.POLYGON, google.maps.drawing.OverlayType.POLYLINE, google.maps.drawing.OverlayType.RECTANGLE]\n        },\n        circleOptions: {\n          fillColor: \"#ffff00\",\n          fillOpacity: 1,\n          strokeWeight: 5,\n          clickable: false,\n          editable: true,\n          zIndex: 1\n        }\n      }\n    }));\n  });\n} //function initialize() {\n//  var infowindow = new google.maps.InfoWindow();\n//  var map = new google.maps.Map(\n//    document.getElementById(\"map_canvas\"), {\n//      center: new google.maps.LatLng(37.4419, -122.1419),\n//      zoom: 13,\n//      mapTypeId: google.maps.MapTypeId.ROADMAP\n//    });\n//  \n//  // Initialize Firebase\n////\tvar config = {\n////\t    apiKey: \"AIzaSyCWZjRe2CK8Hu2VN35AgZOQ7lQZKcI-UWM\",\n////\t    authDomain: \"carrier-35d7c.firebaseapp.com\",\n////\t    databaseURL: \"https://carrier-35d7c.firebaseio.com\",\n////\t    projectId: \"carrier-35d7c\",\n////\t    storageBucket: \"carrier-35d7c.appspot.com\",\n////\t    messagingSenderId: \"827792028763\"\n////\t  };\n////\t  firebase.initializeApp(config);\n//\n//  //Create a node at firebase location to add locations as child keys\n//  var locationsRef = storage.ref(\"locations\");\n//  var bounds = new google.maps.LatLngBounds();\n//  locationsRef.on('child_added', function(snapshot) {\n//  console.log(snapshot)\n//    var data = snapshot.val();\n//    console.log(data);\n//    var marker = new google.maps.Marker({\n//      position: {\n//        lat: data.User.l[0],\n//        lng: data.User.l[1]\n//      },\n//      map: map\n//    });\n//    bounds.extend(marker.getPosition());\n//    marker.addListener('click', (function(data) {\n//      return function(e) {\n//        infowindow.setContent(this.getPosition().toUrlValue(6) + \"<br>\" + data.User.g);\n//        infowindow.open(map, this);\n//      }\n//    }(data)));\n//    map.fitBounds(bounds);\n//  });\n//}\n//google.maps.event.addDomListener(window, \"load\", initialize);","map":{"version":3,"sources":["C:\\Users\\majed\\eclipse-workspace\\HopSpot\\testingRESTfulAPI\\components\\mapQuery.js"],"names":["React","storage","console","log","require","compose","withProps","withScriptjs","withGoogleMap","GoogleMap","DrawingManager","MapQuery","googleMapURL","loadingElement","height","containerElement","mapElement","props","google","maps","LatLng","drawing","OverlayType","CIRCLE","drawingControl","drawingControlOptions","position","ControlPosition","TOP_CENTER","drawingModes","POLYGON","POLYLINE","RECTANGLE","circleOptions","fillColor","fillOpacity","strokeWeight","clickable","editable","zIndex"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AAGA,SAAQC,OAAR,QAAsB,aAAtB;AAEAC,OAAO,CAACC,GAAR,CAAY,mBAAZ;;eAG+BC,OAAO,CAAC,WAAD,C;IAA9BC,O,YAAAA,O;IAASC,S,YAAAA,S;;gBAKbF,OAAO,CAAC,mBAAD,C;IAHTG,Y,aAAAA,Y;IACAC,a,aAAAA,a;IACAC,S,aAAAA,S;;gBAEyBL,OAAO,CAAC,yDAAD,C;IAA1BM,c,aAAAA,c;;AAGR,eAAe,SAASC,QAAT,GAAoB;AAElC,SAAO,CAEJL,SAAS,CAAC;AACRM,IAAAA,YAAY,EAAE,gIADN;AAERC,IAAAA,cAAc,EAAE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM;AAAR;AAAZ,MAFR;AAGRC,IAAAA,gBAAgB,EAAE;AAAK,MAAA,KAAK,EAAE;AAAED,QAAAA,MAAM;AAAR;AAAZ,MAHV;AAIRE,IAAAA,UAAU,EAAE;AAAK,MAAA,KAAK,EAAE;AAAEF,QAAAA,MAAM;AAAR;AAAZ;AAJJ,GAAD,CAAT,EAMAP,YANA,EAOAC,aATI,EAUJ,UAAAS,KAAK;AAAA,WACL,oBAAC,SAAD;AACE,MAAA,WAAW,EAAE,CADf;AAEE,MAAA,aAAa,EAAE,IAAIC,MAAM,CAACC,IAAP,CAAYC,MAAhB,CAAuB,CAAC,MAAxB,EAAgC,OAAhC;AAFjB,OAIE,oBAAC,cAAD;AACE,MAAA,kBAAkB,EAAEF,MAAM,CAACC,IAAP,CAAYE,OAAZ,CAAoBC,WAApB,CAAgCC,MADtD;AAEE,MAAA,cAAc,EAAE;AACdC,QAAAA,cAAc,EAAE,IADF;AAEdC,QAAAA,qBAAqB,EAAE;AACrBC,UAAAA,QAAQ,EAAER,MAAM,CAACC,IAAP,CAAYQ,eAAZ,CAA4BC,UADjB;AAErBC,UAAAA,YAAY,EAAE,CACZX,MAAM,CAACC,IAAP,CAAYE,OAAZ,CAAoBC,WAApB,CAAgCC,MADpB,EAEZL,MAAM,CAACC,IAAP,CAAYE,OAAZ,CAAoBC,WAApB,CAAgCQ,OAFpB,EAGZZ,MAAM,CAACC,IAAP,CAAYE,OAAZ,CAAoBC,WAApB,CAAgCS,QAHpB,EAIZb,MAAM,CAACC,IAAP,CAAYE,OAAZ,CAAoBC,WAApB,CAAgCU,SAJpB;AAFO,SAFT;AAWdC,QAAAA,aAAa,EAAE;AACbC,UAAAA,SAAS,WADI;AAEbC,UAAAA,WAAW,EAAE,CAFA;AAGbC,UAAAA,YAAY,EAAE,CAHD;AAIbC,UAAAA,SAAS,EAAE,KAJE;AAKbC,UAAAA,QAAQ,EAAE,IALG;AAMbC,UAAAA,MAAM,EAAE;AANK;AAXD;AAFlB,MAJF,CADK;AAAA,GAVD,CAAP;AAwCA,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\r\nimport '../styles/mapQuery.scss'\r\n\r\n\r\nimport {storage} from '../firebase';\r\n\r\nconsole.log(\"testing map Query\");\r\n\r\n\r\nconst { compose, withProps } = require(\"recompose\");\r\nconst {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n} = require(\"react-google-maps\");\r\nconst { DrawingManager } = require(\"react-google-maps/lib/components/drawing/DrawingManager\");\r\n\r\n\r\nexport default function MapQuery() {\r\n\r\n\treturn (\r\n\t\t\t\r\n\t\t  withProps({\r\n\t\t    googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyC5g7d4aY3U9JJdYFyS6mDUHLCWmQspZt4\\&v=3.exp&libraries=geometry,drawing,places\",\r\n\t\t    loadingElement: <div style={{ height: `100%` }} />,\r\n\t\t    containerElement: <div style={{ height: `400px` }} />,\r\n\t\t    mapElement: <div style={{ height: `100%` }} />,\r\n\t\t  }),\r\n\t\t  withScriptjs,\r\n\t\t  withGoogleMap\r\n\t\t)(props =>\r\n\t\t  <GoogleMap\r\n\t\t    defaultZoom={8}\r\n\t\t    defaultCenter={new google.maps.LatLng(-34.397, 150.644)}\r\n\t\t  >\r\n\t\t    <DrawingManager\r\n\t\t      defaultDrawingMode={google.maps.drawing.OverlayType.CIRCLE}\r\n\t\t      defaultOptions={{\r\n\t\t        drawingControl: true,\r\n\t\t        drawingControlOptions: {\r\n\t\t          position: google.maps.ControlPosition.TOP_CENTER,\r\n\t\t          drawingModes: [\r\n\t\t            google.maps.drawing.OverlayType.CIRCLE,\r\n\t\t            google.maps.drawing.OverlayType.POLYGON,\r\n\t\t            google.maps.drawing.OverlayType.POLYLINE,\r\n\t\t            google.maps.drawing.OverlayType.RECTANGLE,\r\n\t\t          ],\r\n\t\t        },\r\n\t\t        circleOptions: {\r\n\t\t          fillColor: `#ffff00`,\r\n\t\t          fillOpacity: 1,\r\n\t\t          strokeWeight: 5,\r\n\t\t          clickable: false,\r\n\t\t          editable: true,\r\n\t\t          zIndex: 1,\r\n\t\t        },\r\n\t\t      }}\r\n\t\t    />\r\n\t\t  </GoogleMap>\r\n\t);\r\n}\r\n\r\n//function initialize() {\r\n//  var infowindow = new google.maps.InfoWindow();\r\n//  var map = new google.maps.Map(\r\n//    document.getElementById(\"map_canvas\"), {\r\n//      center: new google.maps.LatLng(37.4419, -122.1419),\r\n//      zoom: 13,\r\n//      mapTypeId: google.maps.MapTypeId.ROADMAP\r\n//    });\r\n//  \r\n//  // Initialize Firebase\r\n////\tvar config = {\r\n////\t    apiKey: \"AIzaSyCWZjRe2CK8Hu2VN35AgZOQ7lQZKcI-UWM\",\r\n////\t    authDomain: \"carrier-35d7c.firebaseapp.com\",\r\n////\t    databaseURL: \"https://carrier-35d7c.firebaseio.com\",\r\n////\t    projectId: \"carrier-35d7c\",\r\n////\t    storageBucket: \"carrier-35d7c.appspot.com\",\r\n////\t    messagingSenderId: \"827792028763\"\r\n////\t  };\r\n////\t  firebase.initializeApp(config);\r\n//\r\n//  //Create a node at firebase location to add locations as child keys\r\n//  var locationsRef = storage.ref(\"locations\");\r\n//  var bounds = new google.maps.LatLngBounds();\r\n//  locationsRef.on('child_added', function(snapshot) {\r\n//  console.log(snapshot)\r\n//    var data = snapshot.val();\r\n//    console.log(data);\r\n//    var marker = new google.maps.Marker({\r\n//      position: {\r\n//        lat: data.User.l[0],\r\n//        lng: data.User.l[1]\r\n//      },\r\n//      map: map\r\n//    });\r\n//    bounds.extend(marker.getPosition());\r\n//    marker.addListener('click', (function(data) {\r\n//      return function(e) {\r\n//        infowindow.setContent(this.getPosition().toUrlValue(6) + \"<br>\" + data.User.g);\r\n//        infowindow.open(map, this);\r\n//      }\r\n//    }(data)));\r\n//    map.fitBounds(bounds);\r\n//  });\r\n//}\r\n//google.maps.event.addDomListener(window, \"load\", initialize);\r\n"]},"metadata":{},"sourceType":"module"}