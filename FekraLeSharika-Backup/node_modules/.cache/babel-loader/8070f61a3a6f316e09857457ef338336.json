{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\n// Imports\nimport React, { Component } from 'react'; // Import Search Bar Components\n//import SearchBar from 'material-ui-search-bar';\n// Import React Scrit Libraray to load Google object\n\nimport Script from 'react-load-script';\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  // Define Constructor\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props)); // Declare State\n\n    _this.state = {\n      city: '',\n      query: ''\n    }; // Bind Functions\n\n    _this.handleScriptLoad = _this.handleScriptLoad.bind(_assertThisInitialized(_this));\n    _this.handlePlaceSelect = _this.handlePlaceSelect.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"handleScriptLoad\",\n    value: function handleScriptLoad() {\n      // Declare Options For Autocomplete\n      var options = {\n        types: ['(cities)']\n      }; // Initialize Google Autocomplete\n\n      /*global google*/\n      // To disable any eslint 'google not defined' errors\n\n      this.autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete')); //      options,\n      //    \n      // Avoid paying for data that you don't need by restricting the set of\n      // place fields that are returned to just the address components and formatted\n      // address.\n\n      this.autocomplete.setFields(['address_components', 'formatted_address']); // Fire Event when a suggested name is selected\n\n      this.autocomplete.addListener('place_changed', this.handlePlaceSelect);\n    }\n  }, {\n    key: \"handlePlaceSelect\",\n    value: function handlePlaceSelect() {\n      // Extract City From Address Object\n      var address = addressObject.address_components; // Check if address is valid\n\n      if (address) {\n        // Set State\n        this.setState({\n          city: address[0].long_name,\n          query: addressObject.formatted_address\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(Script, {\n        url: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBGMpj3dv6hZUWLDEAoI3vlfnKMTG8ugIE&libraries=places\",\n        onLoad: this.handleScriptLoad\n      }), React.createElement(\"input\", {\n        id: \"autocomplete\",\n        placeholder: \"Enter your parking address\",\n        hintText: \"Search City\",\n        value: this.state.query\n      }));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default map2;","map":null,"metadata":{},"sourceType":"module"}