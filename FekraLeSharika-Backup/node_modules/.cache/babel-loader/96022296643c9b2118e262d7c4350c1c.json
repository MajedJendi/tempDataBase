{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\majed\\\\eclipse-workspace\\\\HopSpot\\\\testingRESTfulAPI\\\\components\\\\signup.js\";\nimport \"./formik-demo.css\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { Formik, Field } from \"formik\";\nimport Yup from \"yup\";\nimport classNames from \"classnames\"; // Input feedback\n\nvar InputFeedback = function InputFeedback(_ref) {\n  var error = _ref.error;\n  return error ? React.createElement(\"div\", {\n    className: classNames(\"input-feedback\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, error) : null;\n}; // Checkbox input\n\n\nvar Checkbox = function Checkbox(_ref2) {\n  var _ref2$field = _ref2.field,\n      name = _ref2$field.name,\n      value = _ref2$field.value,\n      onChange = _ref2$field.onChange,\n      onBlur = _ref2$field.onBlur,\n      _ref2$form = _ref2.form,\n      errors = _ref2$form.errors,\n      touched = _ref2$form.touched,\n      setFieldValue = _ref2$form.setFieldValue,\n      id = _ref2.id,\n      label = _ref2.label,\n      className = _ref2.className,\n      props = _objectWithoutProperties(_ref2, [\"field\", \"form\", \"id\", \"label\", \"className\"]);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: name,\n    id: id,\n    type: \"checkbox\",\n    value: value,\n    checked: value,\n    onChange: onChange,\n    onBlur: onBlur,\n    className: classNames(\"radio-button\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, label), touched[name] && React.createElement(InputFeedback, {\n    error: errors[name],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n}; // Checkbox group\n\n\nvar CheckboxGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CheckboxGroup, _React$Component);\n\n  function CheckboxGroup(props) {\n    var _this;\n\n    _classCallCheck(this, CheckboxGroup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CheckboxGroup).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      var target = event.currentTarget;\n      var valueArray = _toConsumableArray(_this.props.value) || [];\n\n      if (target.checked) {\n        valueArray.push(target.id);\n      } else {\n        valueArray.splice(valueArray.indexOf(target.id), 1);\n      }\n\n      _this.props.onChange(_this.props.id, valueArray);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleBlur\", function () {\n      // take care of touched\n      _this.props.onBlur(_this.props.id, true);\n    });\n\n    return _this;\n  }\n\n  _createClass(CheckboxGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          value = _this$props.value,\n          error = _this$props.error,\n          touched = _this$props.touched,\n          label = _this$props.label,\n          className = _this$props.className,\n          children = _this$props.children;\n      var classes = classNames(\"input-field\", {\n        \"is-success\": value || !error && touched,\n        // handle prefilled or user-filled\n        \"is-error\": !!error && touched\n      }, className);\n      return React.createElement(\"div\", {\n        className: classes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, label), React.Children.map(children, function (child) {\n        return React.cloneElement(child, {\n          field: {\n            value: value.includes(child.props.id),\n            onChange: _this2.handleChange,\n            onBlur: _this2.handleBlur\n          }\n        });\n      }), touched && React.createElement(InputFeedback, {\n        error: error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CheckboxGroup;\n}(React.Component); // Radio input\n\n\nvar RadioButton = function RadioButton(_ref3) {\n  var _ref3$field = _ref3.field,\n      name = _ref3$field.name,\n      value = _ref3$field.value,\n      onChange = _ref3$field.onChange,\n      onBlur = _ref3$field.onBlur,\n      id = _ref3.id,\n      label = _ref3.label,\n      className = _ref3.className,\n      props = _objectWithoutProperties(_ref3, [\"field\", \"id\", \"label\", \"className\"]);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"input\", _extends({\n    name: name,\n    id: id,\n    type: \"radio\",\n    value: id // could be something else for output?\n    ,\n    checked: id === value,\n    onChange: onChange,\n    onBlur: onBlur,\n    className: classNames(\"radio-button\")\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, label));\n}; // Radio group\n\n\nvar RadioButtonGroup = function RadioButtonGroup(_ref4) {\n  var value = _ref4.value,\n      error = _ref4.error,\n      touched = _ref4.touched,\n      id = _ref4.id,\n      label = _ref4.label,\n      className = _ref4.className,\n      children = _ref4.children;\n  var classes = classNames(\"input-field\", {\n    \"is-success\": value || !error && touched,\n    // handle prefilled or user-filled\n    \"is-error\": !!error && touched\n  }, className);\n  return React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, label), children, touched && React.createElement(InputFeedback, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })));\n};\n\nvar App = function App() {\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Radio & checkbox inputs with Formik\"), React.createElement(Formik, {\n    initialValues: {\n      radioGroup: \"\",\n      checkboxGroup: [],\n      singleCheckbox: false\n    },\n    validationSchema: Yup.object().shape({\n      radioGroup: Yup.string().required(\"A radio option is required\"),\n      checkboxGroup: Yup.array().required(\"At least one checkbox is required\"),\n      singleCheckbox: Yup.bool().oneOf([true], \"Must agree to something\")\n    }),\n    onSubmit: function onSubmit(values, actions) {\n      setTimeout(function () {\n        console.log(_JSON$stringify(values, null, 2));\n        actions.setSubmitting(false);\n      }, 500);\n    },\n    render: function render(_ref5) {\n      var handleSubmit = _ref5.handleSubmit,\n          setFieldValue = _ref5.setFieldValue,\n          setFieldTouched = _ref5.setFieldTouched,\n          values = _ref5.values,\n          errors = _ref5.errors,\n          touched = _ref5.touched,\n          isSubmitting = _ref5.isSubmitting;\n      return React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Single checkbox\"), React.createElement(Field, {\n        component: Checkbox,\n        name: \"singleCheckbox\",\n        id: \"singleCheckbox\",\n        label: \"Agree to something\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Checkbox group\"), React.createElement(CheckboxGroup, {\n        id: \"checkboxGroup\",\n        label: \"Which of these?\",\n        value: values.checkboxGroup,\n        error: errors.checkboxGroup,\n        touched: touched.checkboxGroup,\n        onChange: setFieldValue,\n        onBlur: setFieldTouched,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Field, {\n        component: Checkbox,\n        name: \"checkboxGroup\",\n        id: \"checkbox1\",\n        label: \"Option 1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(Field, {\n        component: Checkbox,\n        name: \"checkboxGroup\",\n        id: \"checkbox2\",\n        label: \"Option 2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(Field, {\n        component: Checkbox,\n        name: \"checkboxGroup\",\n        id: \"checkbox3\",\n        label: \"Option 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Radio group\"), React.createElement(RadioButtonGroup, {\n        id: \"radioGroup\",\n        label: \"One of these please\",\n        value: values.radioGroup,\n        error: errors.radioGroup,\n        touched: touched.radioGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Field, {\n        component: RadioButton,\n        name: \"radioGroup\",\n        id: \"radioOption1\",\n        label: \"Choose this option\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(Field, {\n        component: RadioButton,\n        name: \"radioGroup\",\n        id: \"radioOption2\",\n        label: \"Or choose this one\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Single radio\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"Is that a valid use case?\"), React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Submit\"));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }));\n};\n\nrender(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 255\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:\\Users\\majed\\eclipse-workspace\\HopSpot\\testingRESTfulAPI\\components\\signup.js"],"names":["React","render","Formik","Field","Yup","classNames","InputFeedback","error","Checkbox","field","name","value","onChange","onBlur","form","errors","touched","setFieldValue","id","label","className","props","CheckboxGroup","event","target","currentTarget","valueArray","checked","push","splice","indexOf","children","classes","Children","map","child","cloneElement","includes","handleChange","handleBlur","Component","RadioButton","RadioButtonGroup","App","radioGroup","checkboxGroup","singleCheckbox","object","shape","string","required","array","bool","oneOf","values","actions","setTimeout","console","log","setSubmitting","handleSubmit","setFieldTouched","isSubmitting","document","getElementById"],"mappings":"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","sourcesContent":["import \"./formik-demo.css\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Formik, Field } from \"formik\";\r\nimport Yup from \"yup\";\r\nimport classNames from \"classnames\";\r\n\r\n// Input feedback\r\nconst InputFeedback = ({ error }) =>\r\n  error ? <div className={classNames(\"input-feedback\")}>{error}</div> : null;\r\n\r\n// Checkbox input\r\nconst Checkbox = ({\r\n  field: { name, value, onChange, onBlur },\r\n  form: { errors, touched, setFieldValue },\r\n  id,\r\n  label,\r\n  className,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        name={name}\r\n        id={id}\r\n        type=\"checkbox\"\r\n        value={value}\r\n        checked={value}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        className={classNames(\"radio-button\")}\r\n      />\r\n      <label htmlFor={id}>{label}</label>\r\n      {touched[name] && <InputFeedback error={errors[name]} />}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Checkbox group\r\nclass CheckboxGroup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handleChange = event => {\r\n    const target = event.currentTarget;\r\n    let valueArray = [...this.props.value] || [];\r\n\r\n    if (target.checked) {\r\n      valueArray.push(target.id);\r\n    } else {\r\n      valueArray.splice(valueArray.indexOf(target.id), 1);\r\n    }\r\n\r\n    this.props.onChange(this.props.id, valueArray);\r\n  };\r\n\r\n  handleBlur = () => {\r\n    // take care of touched\r\n    this.props.onBlur(this.props.id, true);\r\n  };\r\n\r\n  render() {\r\n    const { value, error, touched, label, className, children } = this.props;\r\n\r\n    const classes = classNames(\r\n      \"input-field\",\r\n      {\r\n        \"is-success\": value || (!error && touched), // handle prefilled or user-filled\r\n        \"is-error\": !!error && touched\r\n      },\r\n      className\r\n    );\r\n\r\n    return (\r\n      <div className={classes}>\r\n        <fieldset>\r\n          <legend>{label}</legend>\r\n          {React.Children.map(children, child => {\r\n            return React.cloneElement(child, {\r\n              field: {\r\n                value: value.includes(child.props.id),\r\n                onChange: this.handleChange,\r\n                onBlur: this.handleBlur\r\n              }\r\n            });\r\n          })}\r\n          {touched && <InputFeedback error={error} />}\r\n        </fieldset>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Radio input\r\nconst RadioButton = ({\r\n  field: { name, value, onChange, onBlur },\r\n  id,\r\n  label,\r\n  className,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        name={name}\r\n        id={id}\r\n        type=\"radio\"\r\n        value={id} // could be something else for output?\r\n        checked={id === value}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        className={classNames(\"radio-button\")}\r\n        {...props}\r\n      />\r\n      <label htmlFor={id}>{label}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Radio group\r\nconst RadioButtonGroup = ({\r\n  value,\r\n  error,\r\n  touched,\r\n  id,\r\n  label,\r\n  className,\r\n  children\r\n}) => {\r\n  const classes = classNames(\r\n    \"input-field\",\r\n    {\r\n      \"is-success\": value || (!error && touched), // handle prefilled or user-filled\r\n      \"is-error\": !!error && touched\r\n    },\r\n    className\r\n  );\r\n\r\n  return (\r\n    <div className={classes}>\r\n      <fieldset>\r\n        <legend>{label}</legend>\r\n        {children}\r\n        {touched && <InputFeedback error={error} />}\r\n      </fieldset>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => (\r\n  <div className=\"app\">\r\n    <h1>Radio & checkbox inputs with Formik</h1>\r\n    <Formik\r\n      initialValues={{\r\n        radioGroup: \"\",\r\n        checkboxGroup: [],\r\n        singleCheckbox: false\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        radioGroup: Yup.string().required(\"A radio option is required\"),\r\n        checkboxGroup: Yup.array().required(\r\n          \"At least one checkbox is required\"\r\n        ),\r\n        singleCheckbox: Yup.bool().oneOf([true], \"Must agree to something\")\r\n      })}\r\n      onSubmit={(values, actions) => {\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          actions.setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n      render={({\r\n        handleSubmit,\r\n        setFieldValue,\r\n        setFieldTouched,\r\n        values,\r\n        errors,\r\n        touched,\r\n        isSubmitting\r\n      }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <h2>Single checkbox</h2>\r\n          <Field\r\n            component={Checkbox}\r\n            name=\"singleCheckbox\"\r\n            id=\"singleCheckbox\"\r\n            label=\"Agree to something\"\r\n          />\r\n\r\n          <h2>Checkbox group</h2>\r\n          <CheckboxGroup\r\n            id=\"checkboxGroup\"\r\n            label=\"Which of these?\"\r\n            value={values.checkboxGroup}\r\n            error={errors.checkboxGroup}\r\n            touched={touched.checkboxGroup}\r\n            onChange={setFieldValue}\r\n            onBlur={setFieldTouched}\r\n          >\r\n            <Field\r\n              component={Checkbox}\r\n              name=\"checkboxGroup\"\r\n              id=\"checkbox1\"\r\n              label=\"Option 1\"\r\n            />\r\n            <Field\r\n              component={Checkbox}\r\n              name=\"checkboxGroup\"\r\n              id=\"checkbox2\"\r\n              label=\"Option 2\"\r\n            />\r\n            <Field\r\n              component={Checkbox}\r\n              name=\"checkboxGroup\"\r\n              id=\"checkbox3\"\r\n              label=\"Option 3\"\r\n            />\r\n          </CheckboxGroup>\r\n\r\n          <h2>Radio group</h2>\r\n          <RadioButtonGroup\r\n            id=\"radioGroup\"\r\n            label=\"One of these please\"\r\n            value={values.radioGroup}\r\n            error={errors.radioGroup}\r\n            touched={touched.radioGroup}\r\n          >\r\n            <Field\r\n              component={RadioButton}\r\n              name=\"radioGroup\"\r\n              id=\"radioOption1\"\r\n              label=\"Choose this option\"\r\n            />\r\n            <Field\r\n              component={RadioButton}\r\n              name=\"radioGroup\"\r\n              id=\"radioOption2\"\r\n              label=\"Or choose this one\"\r\n            />\r\n          </RadioButtonGroup>\r\n\r\n          <h2>Single radio</h2>\r\n          <p>Is that a valid use case?</p>\r\n\r\n          <button type=\"submit\" disabled={isSubmitting}>\r\n            Submit\r\n          </button>\r\n        </form>\r\n      )}\r\n    />\r\n  </div>\r\n);\r\n\r\nrender(<App />, document.getElementById(\"root\"));\r\n"]},"metadata":{},"sourceType":"module"}