{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\majed\\\\eclipse-workspace\\\\FekraLeSharika-Backup\\\\components\\\\signup.js\";\nimport React from \"react\";\nimport Autosuggest from \"react-autosuggest\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport Error from \"./Error\";\n\nvar https = require('https');\n\nvar ValidationSchema = Yup.object().shape({//   password: Yup.string()\n  //     .min(1, \"Too Short!\")\n  //     .max(255, \"Too Long!\")\n  //     .required(\"Required\"),\n  //   email: Yup.string()\n  //     .email(\"Must be an email address\")\n  //     .max(255, \"Too Long!\")\n  //     .required(\"Required\"),\n  //     name: Yup.string()\n  //     .min(1, \"Too Short!\")\n  //     .max(255, \"Too Long!\")\n  //     .required(\"Required\"),\n  //     phone: Yup.string()\n  //     .min(1, \"Too Short!\")\n  //     .max(255, \"Too Long!\")\n  //     .required(\"Required\")\n});\n\nfunction userLogin(_x) {\n  return _userLogin.apply(this, arguments);\n}\n\nfunction _userLogin() {\n  _userLogin = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(req) {\n    var res, status;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('Trying to signup rn');\n            _context.next = 3;\n            return fetch(req);\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.status;\n\n          case 6:\n            status = _context.sent;\n\n            if (res.status === 200) {\n              console.log(\"success\");\n              window.location.href = \"about\";\n            } else if (res.status === 409) {\n              console.log(\"Existing email\");\n              document.getElementById(\"input-row-email\").innerHTML = \"You are already registered, would you like to sign in\";\n            } else if (res.status === 408) {\n              console.log(\"Existing phone number\");\n              document.getElementById(\"input-row-phone\").innerHTML = \"This phone number was already used\";\n            } else {\n              console.log(\"Other errors\");\n            }\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _userLogin.apply(this, arguments);\n}\n\nexport default function Signup() {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      country = _React$useState2[0],\n      setCountry = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      suggestions = _React$useState4[0],\n      setSuggestions = _React$useState4[1];\n\n  return React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      retypePass: \"\"\n    },\n    validationSchema: ValidationSchema,\n    validate: function validate(values) {\n      var errors = {};\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting,\n          resetForm = _ref.resetForm;\n\n      if (values.retypePass != values.password) {\n        document.getElementById(\"passAndRepassDontMatch\").innerHTML = \"Password confirmation does not match the password\";\n      } else {\n        setSubmitting(true);\n        console.log(_JSON$stringify(values, null, 2));\n        var headers = new Headers();\n        headers.append('Content-type', 'application/json');\n        var options = {\n          method: 'POST',\n          headers: headers,\n          body: '{ \"email\": \"' + values.email + '\", \"password\": \"' + values.password + '\"}'\n        };\n        var req = new Request('http://localhost:3000/users/signup', options);\n        setTimeout(function () {\n          userLogin(req);\n          resetForm();\n          setCountry(\"\");\n          setSubmitting(false);\n        }, 500);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, function (_ref2) {\n    var values = _ref2.values,\n        errors = _ref2.errors,\n        touched = _ref2.touched,\n        handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        isSubmitting = _ref2.isSubmitting,\n        setFieldValue = _ref2.setFieldValue;\n    return React.createElement(\"div\", {\n      className: \"columns is-mobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column is-half is-offset-one-quarter is-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box is-larg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"control has-icons-left has-icons-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input is-info\",\n      name: \"email\",\n      type: \"text\",\n      placeholder: \"Email\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"icon is-small is-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-envelope\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"help is-danger\",\n      id: \"input-row-email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"control has-icons-left has-icons-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input is-info\",\n      name: \"password\",\n      type: \"text\",\n      placeholder: \"Password\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"icon is-small is-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-shield-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"control has-icons-left has-icons-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input is-info\",\n      name: \"retypePass\",\n      type: \"text\",\n      placeholder: \"Retype your password\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.retypePass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"icon is-small is-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-shield-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"help is-danger\",\n      id: \"passAndRepassDontMatch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      className: \"button is-primary\",\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Signup\")))));\n  });\n} //<label className=\"label\">Password</label>","map":{"version":3,"sources":["C:\\Users\\majed\\eclipse-workspace\\FekraLeSharika-Backup\\components\\signup.js"],"names":["React","Autosuggest","Formik","Yup","axios","Error","https","require","ValidationSchema","object","shape","userLogin","req","console","log","fetch","res","status","window","location","href","document","getElementById","innerHTML","Signup","useState","country","setCountry","suggestions","setSuggestions","email","password","retypePass","values","errors","setSubmitting","resetForm","headers","Headers","append","options","method","body","Request","setTimeout","touched","handleChange","handleBlur","handleSubmit","isSubmitting","setFieldValue"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\n\r\nimport Autosuggest from \"react-autosuggest\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport Error from \"./Error\";\r\n\r\nconst https = require('https')\r\n\r\n\r\n\r\nconst ValidationSchema = Yup.object().shape({\r\n//   password: Yup.string()\r\n//     .min(1, \"Too Short!\")\r\n//     .max(255, \"Too Long!\")\r\n//     .required(\"Required\"),\r\n//   email: Yup.string()\r\n//     .email(\"Must be an email address\")\r\n//     .max(255, \"Too Long!\")\r\n//     .required(\"Required\"),\r\n//     name: Yup.string()\r\n//     .min(1, \"Too Short!\")\r\n//     .max(255, \"Too Long!\")\r\n//     .required(\"Required\"),\r\n//     phone: Yup.string()\r\n//     .min(1, \"Too Short!\")\r\n//     .max(255, \"Too Long!\")\r\n//     .required(\"Required\")\r\n});\r\n\r\nasync function userLogin(req) {\r\n\tconsole.log('Trying to signup rn');\r\n\tconst res = await fetch(req);\r\n\tconst status = await res.status;\r\n  \r\n  if (res.status === 200) {\r\n\t  console.log(\"success\");\r\n\t  window.location.href = \"about\";  \r\n  } else if (res.status === 409) {\r\n  \t\tconsole.log(\"Existing email\");\r\n\t\tdocument.getElementById(\"input-row-email\").innerHTML = \"You are already registered, would you like to sign in\";\r\n  } else if (res.status === 408){\r\n\t\tconsole.log(\"Existing phone number\");\r\n\t\tdocument.getElementById(\"input-row-phone\").innerHTML = \"This phone number was already used\";\r\n  } else {\r\n\t\tconsole.log(\"Other errors\");\r\n  }  \r\n}\r\n\r\nexport default function Signup() {\r\n  const [country, setCountry] = React.useState(\"\");\r\n  const [suggestions, setSuggestions] = React.useState([]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        password: \"\",\r\n\t\tretypePass: \"\",\r\n      }}\r\n      validationSchema={ValidationSchema}\r\n      validate={values => {\r\n        let errors = {};\r\n\r\n        return errors;\r\n      }}\r\n      \tonSubmit={(values, { setSubmitting, resetForm }) => {\r\n\t\t\tif(values.retypePass != values.password) {\r\n\t\t\t\tdocument.getElementById(\"passAndRepassDontMatch\").innerHTML = \"Password confirmation does not match the password\";\r\n\t\t\t} else {\r\n\t\t\t\tsetSubmitting(true);\r\n\r\n\t\t\t\tconsole.log(JSON.stringify(values, null, 2));\r\n\t\t\r\n\t\t\t\t\r\n\t\t\t\tconst headers = new Headers();\r\n\t\t\t\theaders.append('Content-type', 'application/json');\r\n\t\t\t\t\r\n\t\t\t\tconst options = { \r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\theaders,\r\n\t\t\t\t\tbody: '{ \"email\": \"' + values.email \r\n\t\t\t\t\t\t+ '\", \"password\": \"' + values.password + '\"}' \r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tconst req = new Request('http://localhost:3000/users/signup', options);\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t  setTimeout(() => {\r\n\t\t\t\t  userLogin(req);\r\n\t\t\t\t  resetForm();\r\n\t\t\t\t  setCountry(\"\");\r\n\t\t\t\t  setSubmitting(false);\r\n\t\t\t   }, 500);\r\n\t\t\t}\r\n\t\t\t\t\r\n\r\n    \t}}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        setFieldValue\r\n      }) => (\r\n    \t\t  \r\n    \t<div className =\"columns is-mobile\">\r\n    \t\t<div className =\"column is-half is-offset-one-quarter is-4\">\r\n        \t\t<div className = \"box is-larg\">\r\n\r\n\t\t\t        <form onSubmit={handleSubmit}>\r\n\t\t\t\t\t  \r\n\t\t\t          <div className=\"field\">\r\n\t\t\t\t          <div className=\"control has-icons-left has-icons-right\">\r\n\t\t\t\t\t            <input \r\n\t\t\t\t\t            \tclassName =\"input is-info\" \r\n\t\t\t\t\t            \tname=\"email\"\r\n\t\t\t\t\t            \ttype=\"text\" \r\n\t\t\t\t\t            \tplaceholder=\"Email\" \r\n\t\t\t\t\t\t\t\t    onChange={handleChange}\r\n\t\t\t\t\t\t\t        onBlur={handleBlur}\r\n\t\t\t\t\t            \tvalue={values.email}\r\n\t\t\t\t\t            />\r\n\t\t\t\t\t            \r\n\t\t\t\t\t\t            <span className=\"icon is-small is-left\">\r\n\t\t\t\t\t\t              <i className=\"fas fa-envelope\"></i>\r\n\t\t\t\t\t\t            </span>\r\n\r\n\t\t\t\t          <p className=\"help is-danger\" id = \"input-row-email\"></p>\r\n\t\t\t\t          </div>\r\n\t\t\t          </div>\r\n\t\t\t          \r\n\t\t\t\t       <div className=\"field\">\r\n\t\t\t\t          <div className=\"control has-icons-left has-icons-right\">\r\n\t\t\t\t\t            <input \r\n\t\t\t\t\t            \tclassName =\"input is-info\" \r\n\t\t\t\t\t            \tname=\"password\"\r\n\t\t\t\t\t            \ttype=\"text\" \r\n\t\t\t\t\t            \tplaceholder=\"Password\" \r\n\t\t\t\t\t\t\t\t    onChange={handleChange}\r\n\t\t\t\t\t\t\t        onBlur={handleBlur}\r\n\t\t\t\t\t            \tvalue={values.password}\r\n\t\t\t\t\t            />\r\n\t\t\t\t\t            \r\n\t\t\t\t\t\t            <span className=\"icon is-small is-left\">\r\n\t\t\t\t\t\t              <i className=\"fas fa-shield-alt\"></i>\r\n\t\t\t\t\t\t            </span>\r\n\t\t\t\t          </div>\r\n\t\t\t          </div>\r\n\t\t\t          \r\n\t\t\t\t\t  <div className=\"field\">\r\n\t\t\t\t          \t<div className=\"control has-icons-left has-icons-right\">\r\n\t\t\t\t\t            <input \r\n\t\t\t\t\t            \tclassName =\"input is-info\" \r\n\t\t\t\t\t            \tname=\"retypePass\"\r\n\t\t\t\t\t            \ttype=\"text\" \r\n\t\t\t\t\t            \tplaceholder=\"Retype your password\" \r\n\t\t\t\t\t\t\t\t    onChange={handleChange}\r\n\t\t\t\t\t\t\t        onBlur={handleBlur}\r\n\t\t\t\t\t            \tvalue={values.retypePass}\r\n\t\t\t\t\t            />\r\n\t\t\t\t\t\t\t\t<span className=\"icon is-small is-left\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-shield-alt\"></i>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t          \t\t<p className=\"help is-danger\" id =\"passAndRepassDontMatch\"></p>\r\n\t\t\t\t          \t</div>\r\n\t\t\t          \t</div>\r\n\r\n\t\t\t\t\t\t<button className= \"button is-primary\" type = \"submit\" disabled={isSubmitting}>\r\n\t\t\t\t\t\t\tSignup\r\n\t\t\t\t\t\t</button>\r\n\t\t\t        </form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\n//<label className=\"label\">Password</label>\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}