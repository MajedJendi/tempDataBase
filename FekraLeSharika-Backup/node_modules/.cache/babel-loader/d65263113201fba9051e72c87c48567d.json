{"ast":null,"code":"import React from \"react\";\nimport '../styles/mapQuery.scss';\nimport { storage } from '../firebase';\nconsole.log(\"testing map Query\");\nexport default function MapQuery() {\n  return React.createElement(\"div\", null, React.createElement(\"script\", {\n    src: \"https://www.gstatic.com/firebasejs/4.12.1/firebase.js\"\n  }), React.createElement(\"script\", {\n    src: \"https://cdn.firebase.com/libs/geofire/4.1.2/geofire.min.js\"\n  }), React.createElement(\"div\", {\n    id: \"map_canvas\"\n  }));\n}\n\nfunction initialize() {\n  var infowindow = new google.maps.InfoWindow();\n  var map = new google.maps.Map(document.getElementById(\"map_canvas\"), {\n    center: new google.maps.LatLng(37.4419, -122.1419),\n    zoom: 13,\n    mapTypeId: google.maps.MapTypeId.ROADMAP\n  }); // Initialize Firebase\n  //\tvar config = {\n  //\t    apiKey: \"AIzaSyCWZjRe2CK8Hu2VN35AgZOQ7lQZKcI-UWM\",\n  //\t    authDomain: \"carrier-35d7c.firebaseapp.com\",\n  //\t    databaseURL: \"https://carrier-35d7c.firebaseio.com\",\n  //\t    projectId: \"carrier-35d7c\",\n  //\t    storageBucket: \"carrier-35d7c.appspot.com\",\n  //\t    messagingSenderId: \"827792028763\"\n  //\t  };\n  //\t  firebase.initializeApp(config);\n  //Create a node at firebase location to add locations as child keys\n\n  var locationsRef = storage.ref(\"locations\");\n  var bounds = new google.maps.LatLngBounds();\n  locationsRef.on('child_added', function (snapshot) {\n    console.log(snapshot);\n    var data = snapshot.val();\n    console.log(data);\n    var marker = new google.maps.Marker({\n      position: {\n        lat: data.User.l[0],\n        lng: data.User.l[1]\n      },\n      map: map\n    });\n    bounds.extend(marker.getPosition());\n    marker.addListener('click', function (data) {\n      return function (e) {\n        infowindow.setContent(this.getPosition().toUrlValue(6) + \"<br>\" + data.User.g);\n        infowindow.open(map, this);\n      };\n    }(data));\n    map.fitBounds(bounds);\n  });\n}\n\ngoogle.maps.event.addDomListener(window, \"load\", initialize);","map":{"version":3,"sources":["C:\\Users\\majed\\eclipse-workspace\\HopSpot\\testingRESTfulAPI\\components\\mapQuery.js"],"names":["React","storage","console","log","MapQuery","initialize","infowindow","google","maps","InfoWindow","map","Map","document","getElementById","center","LatLng","zoom","mapTypeId","MapTypeId","ROADMAP","locationsRef","ref","bounds","LatLngBounds","on","snapshot","data","val","marker","Marker","position","lat","User","l","lng","extend","getPosition","addListener","e","setContent","toUrlValue","g","open","fitBounds","event","addDomListener","window"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AAGA,SAAQC,OAAR,QAAsB,aAAtB;AAEAC,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAMA,eAAe,SAASC,QAAT,GAAoB;AAElC,SACC,iCAEC;AAAQ,IAAA,GAAG,EAAC;AAAZ,IAFD,EAGC;AAAQ,IAAA,GAAG,EAAC;AAAZ,IAHD,EAIC;AAAK,IAAA,EAAE,EAAC;AAAR,IAJD,CADD;AAQA;;AAED,SAASC,UAAT,GAAsB;AACpB,MAAIC,UAAU,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,UAAhB,EAAjB;AACA,MAAIC,GAAG,GAAG,IAAIH,MAAM,CAACC,IAAP,CAAYG,GAAhB,CACRC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CADQ,EAC+B;AACrCC,IAAAA,MAAM,EAAE,IAAIP,MAAM,CAACC,IAAP,CAAYO,MAAhB,CAAuB,OAAvB,EAAgC,CAAC,QAAjC,CAD6B;AAErCC,IAAAA,IAAI,EAAE,EAF+B;AAGrCC,IAAAA,SAAS,EAAEV,MAAM,CAACC,IAAP,CAAYU,SAAZ,CAAsBC;AAHI,GAD/B,CAAV,CAFoB,CASpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;;AACA,MAAIC,YAAY,GAAGnB,OAAO,CAACoB,GAAR,CAAY,WAAZ,CAAnB;AACA,MAAIC,MAAM,GAAG,IAAIf,MAAM,CAACC,IAAP,CAAYe,YAAhB,EAAb;AACAH,EAAAA,YAAY,CAACI,EAAb,CAAgB,aAAhB,EAA+B,UAASC,QAAT,EAAmB;AAClDvB,IAAAA,OAAO,CAACC,GAAR,CAAYsB,QAAZ;AACE,QAAIC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAX;AACAzB,IAAAA,OAAO,CAACC,GAAR,CAAYuB,IAAZ;AACA,QAAIE,MAAM,GAAG,IAAIrB,MAAM,CAACC,IAAP,CAAYqB,MAAhB,CAAuB;AAClCC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,GAAG,EAAEL,IAAI,CAACM,IAAL,CAAUC,CAAV,CAAY,CAAZ,CADG;AAERC,QAAAA,GAAG,EAAER,IAAI,CAACM,IAAL,CAAUC,CAAV,CAAY,CAAZ;AAFG,OADwB;AAKlCvB,MAAAA,GAAG,EAAEA;AAL6B,KAAvB,CAAb;AAOAY,IAAAA,MAAM,CAACa,MAAP,CAAcP,MAAM,CAACQ,WAAP,EAAd;AACAR,IAAAA,MAAM,CAACS,WAAP,CAAmB,OAAnB,EAA6B,UAASX,IAAT,EAAe;AAC1C,aAAO,UAASY,CAAT,EAAY;AACjBhC,QAAAA,UAAU,CAACiC,UAAX,CAAsB,KAAKH,WAAL,GAAmBI,UAAnB,CAA8B,CAA9B,IAAmC,MAAnC,GAA4Cd,IAAI,CAACM,IAAL,CAAUS,CAA5E;AACAnC,QAAAA,UAAU,CAACoC,IAAX,CAAgBhC,GAAhB,EAAqB,IAArB;AACD,OAHD;AAID,KAL4B,CAK3BgB,IAL2B,CAA7B;AAMAhB,IAAAA,GAAG,CAACiC,SAAJ,CAAcrB,MAAd;AACD,GAnBD;AAoBD;;AACDf,MAAM,CAACC,IAAP,CAAYoC,KAAZ,CAAkBC,cAAlB,CAAiCC,MAAjC,EAAyC,MAAzC,EAAiDzC,UAAjD","sourcesContent":["import React from \"react\";\r\nimport '../styles/mapQuery.scss'\r\n\r\n\r\nimport {storage} from '../firebase';\r\n\r\nconsole.log(\"testing map Query\");\r\n\r\n\r\n\r\n\r\n\r\nexport default function MapQuery() {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\r\n\t\t\t<script src=\"https://www.gstatic.com/firebasejs/4.12.1/firebase.js\"></script>\r\n\t\t\t<script src=\"https://cdn.firebase.com/libs/geofire/4.1.2/geofire.min.js\"></script>\r\n\t\t\t<div id=\"map_canvas\"></div>\r\n\t \t</div>\r\n\t);\r\n}\r\n\r\nfunction initialize() {\r\n  var infowindow = new google.maps.InfoWindow();\r\n  var map = new google.maps.Map(\r\n    document.getElementById(\"map_canvas\"), {\r\n      center: new google.maps.LatLng(37.4419, -122.1419),\r\n      zoom: 13,\r\n      mapTypeId: google.maps.MapTypeId.ROADMAP\r\n    });\r\n  \r\n  // Initialize Firebase\r\n//\tvar config = {\r\n//\t    apiKey: \"AIzaSyCWZjRe2CK8Hu2VN35AgZOQ7lQZKcI-UWM\",\r\n//\t    authDomain: \"carrier-35d7c.firebaseapp.com\",\r\n//\t    databaseURL: \"https://carrier-35d7c.firebaseio.com\",\r\n//\t    projectId: \"carrier-35d7c\",\r\n//\t    storageBucket: \"carrier-35d7c.appspot.com\",\r\n//\t    messagingSenderId: \"827792028763\"\r\n//\t  };\r\n//\t  firebase.initializeApp(config);\r\n\r\n  //Create a node at firebase location to add locations as child keys\r\n  var locationsRef = storage.ref(\"locations\");\r\n  var bounds = new google.maps.LatLngBounds();\r\n  locationsRef.on('child_added', function(snapshot) {\r\n  console.log(snapshot)\r\n    var data = snapshot.val();\r\n    console.log(data);\r\n    var marker = new google.maps.Marker({\r\n      position: {\r\n        lat: data.User.l[0],\r\n        lng: data.User.l[1]\r\n      },\r\n      map: map\r\n    });\r\n    bounds.extend(marker.getPosition());\r\n    marker.addListener('click', (function(data) {\r\n      return function(e) {\r\n        infowindow.setContent(this.getPosition().toUrlValue(6) + \"<br>\" + data.User.g);\r\n        infowindow.open(map, this);\r\n      }\r\n    }(data)));\r\n    map.fitBounds(bounds);\r\n  });\r\n}\r\ngoogle.maps.event.addDomListener(window, \"load\", initialize);\r\n"]},"metadata":{},"sourceType":"module"}